services:
  db:
    image: mysql:8.0
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - wordpress_net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  wordpress:
    image: wordpress:latest
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${WORDPRESS_PORT}:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DEBUG: ${WORDPRESS_DEBUG}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG', true);
        define('WP_DEBUG_LOG', true);
        define('WP_DEBUG_DISPLAY', true);
        define('SCRIPT_DEBUG', true);
        define('SAVEQUERIES', true);
      WORDPRESS_ACTIVE_PLUGINS: wp-resources/wp-resources.php
      WORDPRESS_DELETE_DEFAULT_PLUGINS: "true"
    volumes:
      - wordpress_data:/var/www/html
      - type: bind
        source: .
        target: /var/www/html/wp-content/plugins/wp-resources
      - type: bind
        source: ./wp-cli.yml
        target: /var/www/html/wp-cli.yml
    networks:
      - wordpress_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3
    entrypoint: |
      bash -c "
        # Install required packages
        apt-get update && apt-get install -y curl less mysql-client

        # Install WP-CLI
        curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        chmod +x wp-cli.phar
        mv wp-cli.phar /usr/local/bin/wp

        # Start Apache in background
        docker-entrypoint.sh apache2-foreground &

        # Wait for WordPress to be ready
        until wp core is-installed --allow-root; do
          sleep 2
        done

        # Verify plugin directory exists and has correct permissions
        echo 'Checking plugin directory...'
        if [ ! -d /var/www/html/wp-content/plugins/wp-resources ]; then
          echo 'Error: Plugin directory not found!'
          exit 1
        fi

        # Set correct permissions
        chown -R www-data:www-data /var/www/html/wp-content/plugins/wp-resources
        chmod -R 755 /var/www/html/wp-content/plugins/wp-resources

        # Verify plugin is recognized by WordPress
        echo 'Verifying plugin is recognized...'
        if ! wp plugin is-installed wp-resources --allow-root; then
          echo 'Error: Plugin not recognized by WordPress!'
          wp plugin list --allow-root
          exit 1
        fi

        # Activate our plugin
        echo 'Activating plugin...'
        wp plugin activate wp-resources --allow-root
        
        # Verify activation
        if wp plugin is-active wp-resources --allow-root; then
          echo 'Plugin successfully activated!'
        else
          echo 'Error: Plugin activation failed!'
          exit 1
        fi

        # Keep container running
        tail -f /dev/null"

volumes:
  db_data:
  wordpress_data:

networks:
  wordpress_net: